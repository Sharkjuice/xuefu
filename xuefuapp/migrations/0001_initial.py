# Generated by Django 3.2.12 on 2022-03-21 02:14

from django.db import migrations, models
import django.db.models.deletion
import functools
import xuefuapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='录入日期')),
                ('change_at', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('created_by', models.CharField(blank=True, max_length=20, null=True, verbose_name='录入人员')),
                ('room_id', models.CharField(max_length=20, verbose_name='房间号码')),
                ('car_id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='车牌号码')),
                ('car_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='车型')),
                ('applicant_name', models.CharField(max_length=20, verbose_name='申请人')),
                ('applicant_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='身份证号码')),
                ('apply_date', models.DateField(verbose_name='申请日期')),
                ('contact', models.CharField(blank=True, max_length=100, null=True, verbose_name='联系电话')),
                ('card_type', models.IntegerField(blank=True, choices=[(1, '地面月卡'), (2, '地面临时'), (3, '地库月卡'), (4, '地库固定')], null=True, verbose_name='卡类型')),
                ('total_cars', models.IntegerField(default=1, verbose_name='一户登记车辆次数')),
                ('approve_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='认证编号')),
                ('approve_status', models.IntegerField(choices=[(1, '待核实'), (2, '通过'), (3, '不通过')], default=1, verbose_name='审核状态')),
                ('notes', models.CharField(blank=True, max_length=200, null=True, verbose_name='备注')),
                ('doc_hukouben_1', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.hukouben_path, *(1,), **{}), verbose_name='户口本页面1')),
                ('doc_hukouben_2', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.hukouben_path, *(2,), **{}), verbose_name='户口本页面2')),
                ('doc_shenfenzheng_1', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.shenfenzheng_path, *(1,), **{}), verbose_name='身份证')),
                ('doc_shenfenzheng_2', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.shenfenzheng_path, *(2,), **{}), verbose_name='身份证反面')),
                ('doc_fangchanzheng', models.FileField(blank=True, null=True, upload_to=xuefuapp.models.fangchanzheng_path, verbose_name='房产证')),
                ('doc_jiehunzheng', models.FileField(blank=True, null=True, upload_to=xuefuapp.models.jiehunzheng_path, verbose_name='结婚证')),
                ('doc_lihunzheng', models.FileField(blank=True, null=True, upload_to=xuefuapp.models.lihunzheng_path, verbose_name='离婚证')),
                ('doc_xingshizheng', models.FileField(blank=True, max_length=4000, null=True, upload_to=xuefuapp.models.xingshizheng_path, verbose_name='行驶证')),
                ('doc_changzuxieyi_1', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.changzuxieyi_path, *(1,), **{}), verbose_name='长租协议页面1')),
                ('doc_changzuxieyi_2', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.changzuxieyi_path, *(2,), **{}), verbose_name='长租协议页面2')),
                ('doc_changzuxieyi_3', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.changzuxieyi_path, *(3,), **{}), verbose_name='长租协议页面3')),
                ('doc_changzuxieyi_4', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.changzuxieyi_path, *(4,), **{}), verbose_name='长租协议页面4')),
                ('doc_changzuxieyi_5', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.changzuxieyi_path, *(5,), **{}), verbose_name='长租协议页面5')),
                ('doc_gongzhengshu_1', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.gongzhengshu_path, *(1,), **{}), verbose_name='公证书页面1')),
                ('doc_gongzhengshu_2', models.FileField(blank=True, null=True, upload_to=functools.partial(xuefuapp.models.gongzhengshu_path, *(2,), **{}), verbose_name='公证书页面2')),
                ('process_info', models.CharField(blank=True, max_length=100, null=True, verbose_name='处理情况')),
                ('underground_fix_no', models.IntegerField(blank=True, null=True, verbose_name='地库车位号')),
            ],
            options={
                'verbose_name': '业主车辆',
                'verbose_name_plural': '所有业主车辆',
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='内部ID')),
                ('room_id', models.CharField(max_length=20, verbose_name='房间号码')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='录入日期')),
                ('change_at', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('created_by', models.CharField(blank=True, max_length=20, null=True, verbose_name='录入人员')),
                ('total_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='合计欠费')),
                ('total_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='合计欠费期间')),
                ('total_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('prop_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='住宅物管费欠费')),
                ('prop_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='住宅物管费欠费周期')),
                ('prop_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('busi_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='商业物管费欠费')),
                ('busi_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='商业物管费欠费周期')),
                ('busi_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('water_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='水费欠费')),
                ('water_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='水费欠费周期')),
                ('water_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('power_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='电费欠费')),
                ('power_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='电费欠费周期')),
                ('power_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('sewage_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='排污费欠费')),
                ('sewage_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='排污费欠费周期')),
                ('sewage_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('garbage_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='垃圾处置费欠费')),
                ('garbage_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='垃圾处置费欠费周期')),
                ('garbage_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('base_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='本体维修基金欠费')),
                ('base_fee_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='本体维修基金欠费周期')),
                ('base_fee_months', models.IntegerField(default=0, verbose_name='合计欠费月数')),
                ('notes', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '业主欠费',
                'verbose_name_plural': '所有业主欠费',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='内部ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='录入日期')),
                ('change_at', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('created_by', models.CharField(blank=True, max_length=20, null=True, verbose_name='录入人员')),
                ('room_id', models.CharField(max_length=20, verbose_name='房间号码')),
                ('owner_name', models.CharField(max_length=20, verbose_name='业主姓名')),
                ('owner_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='身份证号码')),
                ('contact', models.CharField(max_length=100, verbose_name='联系电话')),
                ('wx_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='微信ID')),
                ('approve_status', models.IntegerField(blank=True, choices=[(1, '待核实'), (2, '通过'), (3, '不通过')], null=True, verbose_name='确认状态')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '业主联系信息',
                'verbose_name_plural': '所有业主联系信息',
            },
        ),
        migrations.CreateModel(
            name='UndergroundQueue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='内部ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='录入日期')),
                ('change_at', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('created_by', models.CharField(blank=True, max_length=20, null=True, verbose_name='录入人员')),
                ('apply_date', models.DateField(verbose_name='申请日期')),
                ('apply_id', models.IntegerField(unique=True, verbose_name='排队申请号')),
                ('process_status', models.IntegerField(choices=[(1, '待核实'), (2, '通过'), (3, '不通过')], default=1, verbose_name='办理情况')),
                ('complete_date', models.DateField(verbose_name='完成日期')),
                ('notes', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='underground_queue_info', to='xuefuapp.car')),
            ],
            options={
                'verbose_name': '地库排队',
                'verbose_name_plural': '所有地库排队',
            },
        ),
        migrations.CreateModel(
            name='GroundQueue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='内部ID')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='录入日期')),
                ('change_at', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
                ('created_by', models.CharField(blank=True, max_length=20, null=True, verbose_name='录入人员')),
                ('apply_date', models.DateField(verbose_name='申请日期')),
                ('apply_id', models.IntegerField(unique=True, verbose_name='排队申请号')),
                ('process_status', models.IntegerField(choices=[(0, '等待中'), (1, '待办理'), (2, '已办理')], default=1, verbose_name='办理情况')),
                ('complete_date', models.DateField(verbose_name='完成日期')),
                ('notes', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ground_queue_info', to='xuefuapp.car')),
            ],
            options={
                'verbose_name': '地面排队',
                'verbose_name_plural': '所有地面排队',
            },
        ),
    ]
